(()=>{"use strict";const e={data:()=>({file:null,fileName:null,imageUrl:"",images:[],showForm:!1,search:null,filteredImages:[]}),computed:{previewUrl(){if(this.file)return URL.createObjectURL(this.file)}},methods:{newFile(){this.file=this.$refs.file.files[0]},showTheForm(){this.showForm=!this.showForm},gotDragFile(e){this.file=e[0],Object.defineProperty(this.file,"name",{writable:!0,value:"name.jpg"}),console.log(e[0])},updateFileName(e){this.fileName=e.target.value,Object.defineProperty(this.file,"name",{writable:!0,value:e.target.value+".jpg"})},searchImages(){console.log(this.search),this.filteredImages=this.images.filter((e=>e.name.includes(this.search)))},async pushImage(e){e.preventDefault();let a=new FormData;a.append("fileName",this.fileName),a.append("image",this.file);const t=await fetch("http://localhost:8080/image-upload",{method:"POST",body:a}),i=await t.json();this.images.unshift({path:i.path.toString(),name:i.name}),this.showForm=!1,this.file=null,this.fileName=null},async sendImageDeletion(e){const a=await fetch("http://localhost:8080/delete-image",{headers:{"Content-Type":"application/json"},method:"DELETE",body:JSON.stringify({imagePath:e})}),t=await a.json();this.images=t.images}},async created(){const e=await fetch("http://localhost:8080/all",{method:"GET"}),a=await e.json();this.images=a.images}},a={template:'\n    <div class="grid_image-container" @mouseenter="showTheBanner" @mouseleave="showTheBanner">\n      <transition name="banner">\n        <div v-if="showBanner" class="grid_image-banner">\n          <a :download="path" :href="\'http://localhost:8080/image-download/\' + imageName"><p class="material-icons md-48 download-icon">download_for_offline</p></a>\n          <p class="image-name">{{ name }}</p>\n          <p class="material-icons md-48 delete-icon" @click="deleteImage">cancel</p>\n        </div>\n      </transition>\n      <img\n        :src="path"\n        class="grid_image"\n        alt=""\n      />\n    </div>\n    ',props:["path","name"],data:()=>({showBanner:!1}),computed:{imageName(){return this.path.split("/")[2]}},methods:{showTheBanner(){this.showBanner=!this.showBanner},showUrl(){console.log(this.path)},deleteImage(e){const a=e.target.parentElement.nextElementSibling.src;this.$emit("deleteThisImage",a)}}},t={template:'\n        <div @drop.prevent="fileReceipt" @propagation.prevent @dragenter.prevent @dragover.prevent id="file-drag" ref="fileform"><slot></slot></div>\n      ',data:()=>({dragAndDropCapable:!1,files:[]}),methods:{determineDragAndDropCapable(){let e=document.createElement("div");return("draggable"in e||"ondragstart"in e&&"ondrop"in e)&&"FormData"in window&&"FileReader"in window},fileReceipt(e){this.$emit("gotDragFile",e.dataTransfer.files)}}},i=Vue.createApp(e);i.component("upload-area",t),i.component("app-image",a),console.log(a),i.mount("#app")})();